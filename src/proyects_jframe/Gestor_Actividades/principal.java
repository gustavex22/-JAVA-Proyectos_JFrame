/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyects_jframe.Gestor_Actividades;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

    /*
    Actividades:
    -Aspecto Grafico(terminado)
    -Codigo:
        -Option de añadir Tarea(Terminado)
        -Option para Eliminar Tarea(Terminado)
        -Usar un list para mostrar graficamente los datos (listo)
    */

/**
 *
 * @author Iberos-HP
 */
public class principal extends javax.swing.JFrame {
    DefaultTableModel modelo ;
    public boolean Filaseleccionada ;
    public int indexAnterior = -1 ;


    //*variable que guarda el conteo de las tareas agregadas
    
    //*esta variable agrupa todo los counters Usados en un arreglo
        int [] Counter_General =new int[]{ 0,0};
         //*counter_general [0] counter para el numero de tareas
         //*counter_general[1] counter para la funcion editar

    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Gestor de Actividades");
        

        //!Timer se ejecuta cada 20 ms (0,20 segundo)
        Timer_Ejecucion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelGeneral = new javax.swing.JPanel();
        PanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtpDescripcion = new javax.swing.JTextArea();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox<>();
        btnDeseleccionar = new javax.swing.JButton();
        txtOrden = new javax.swing.JLabel();
        PanelList = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tlbDatos = new javax.swing.JTable();
        panelbar = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Control de Actividades");
        jLabel1.setToolTipText("");

        jLabel2.setText("N°Orden");

        jLabel3.setText("Nombre");

        jLabel4.setText("Descripcion");

        txtpDescripcion.setColumns(20);
        txtpDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtpDescripcion);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel5.setText("Estado");

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendiente", "Cancelado", "Completado", " " }));
        cmbEstado.setEnabled(false);
        cmbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstadoActionPerformed(evt);
            }
        });

        btnDeseleccionar.setText("Deseleccionar");
        btnDeseleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeseleccionarActionPerformed(evt);
            }
        });

        txtOrden.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtOrden.setText("0");

        javax.swing.GroupLayout PanelDatosLayout = new javax.swing.GroupLayout(PanelDatos);
        PanelDatos.setLayout(PanelDatosLayout);
        PanelDatosLayout.setHorizontalGroup(
            PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDatosLayout.createSequentialGroup()
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDatosLayout.createSequentialGroup()
                        .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelDatosLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel1))
                            .addGroup(PanelDatosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeseleccionar)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelDatosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDatosLayout.createSequentialGroup()
                                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(PanelDatosLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(txtOrden)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDatosLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(33, 33, 33)))
                                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDatosLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(61, 61, 61)))
                                .addGap(9, 9, 9))
                            .addComponent(jScrollPane1)
                            .addGroup(PanelDatosLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        PanelDatosLayout.setVerticalGroup(
            PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDatosLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtOrden))
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeseleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        tlbDatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        tlbDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Orden", "Estado", "Nombre", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tlbDatos.setFocusable(false);
        jScrollPane3.setViewportView(tlbDatos);
        if (tlbDatos.getColumnModel().getColumnCount() > 0) {
            tlbDatos.getColumnModel().getColumn(0).setMinWidth(50);
            tlbDatos.getColumnModel().getColumn(0).setPreferredWidth(50);
            tlbDatos.getColumnModel().getColumn(0).setMaxWidth(50);
            tlbDatos.getColumnModel().getColumn(1).setMinWidth(80);
            tlbDatos.getColumnModel().getColumn(1).setPreferredWidth(80);
            tlbDatos.getColumnModel().getColumn(1).setMaxWidth(80);
            tlbDatos.getColumnModel().getColumn(2).setMinWidth(190);
            tlbDatos.getColumnModel().getColumn(2).setPreferredWidth(190);
            tlbDatos.getColumnModel().getColumn(2).setMaxWidth(190);
        }

        javax.swing.GroupLayout PanelListLayout = new javax.swing.GroupLayout(PanelList);
        PanelList.setLayout(PanelListLayout);
        PanelListLayout.setHorizontalGroup(
            PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelListLayout.setVerticalGroup(
            PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelGeneralLayout = new javax.swing.GroupLayout(PanelGeneral);
        PanelGeneral.setLayout(PanelGeneralLayout);
        PanelGeneralLayout.setHorizontalGroup(
            PanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelGeneralLayout.createSequentialGroup()
                .addComponent(PanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelGeneralLayout.setVerticalGroup(
            PanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelbarLayout = new javax.swing.GroupLayout(panelbar);
        panelbar.setLayout(panelbarLayout);
        panelbarLayout.setHorizontalGroup(
            panelbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelbarLayout.setVerticalGroup(
            panelbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void Añadir_o_Reemplazar_datos(int index,String Estado,String Nombre,String Descripcion){
        //fila vacia
        if(!Filaseleccionada){
            modelo.addRow(new Object[4]);
        }
        //Introduciendo Datos
        modelo.setValueAt(index, index, 0);
        modelo.setValueAt(Estado, index, 1);
        modelo.setValueAt(Nombre, index, 2);
        modelo.setValueAt(Descripcion, index, 3);
        
        //Actualizar modelo de tabla
        modelo = (DefaultTableModel) tlbDatos.getModel();
        tlbDatos.setModel(modelo);
    }

    public void Timer_Ejecucion(){
        //? Se Ejecuta cada 20ms
        Timer reloj = new Timer(20 , new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                Filaseleccionada = tlbDatos.getSelectedRow() != -1; //? comparacion si indica si se a seleccionado una fila o no
                
                if(Filaseleccionada){
                    
                    //!se ejecuta cuando se selecciona una fila y la fila esta vacia
                    Modo_Editar(true); //?activa el aspecto grafico al editar
                    Comprobar_cambio_de_index();
                    Comprobar_fila_vacia();

                }else{
                    //!se ejecuta en caso contrario
                    Modo_Editar(false);
                    //*se resetea el counter de la funcion editar 
                    Counter_General[1] = 0;
                }
            }
        });
        //*inicia el timer
        reloj.start();
    }
    
    
    private void Modo_Editar(boolean estado){
        
        cmbEstado.setEnabled(estado);
        btnDeseleccionar.setVisible(estado);
        btnEliminar.setVisible(estado);

        if(estado){
            btnAgregar.setText("Editar");
        }else{
            btnAgregar.setText("Agregar");
        }
    }
    
    private void Comprobar_fila_vacia(){
        try {
            boolean fila_vacia;
            int index = tlbDatos.getSelectedRow();
            Object Nombre = tlbDatos.getValueAt(index,0);
            fila_vacia = Nombre == null;

            if(fila_vacia){//?solo se ejecuta si la fila esta vacia
                //! limpia los campos apaga el modo editar t termina la ejecuacion de la funcion
                JOptionPane.showMessageDialog(null,"Error :No se puede editar una fila vacia");
                Limpiar_Campos();
                Modo_Editar(false);
                return;
            }else{
                Editar_Campos(index);
            }

        } catch (Exception e) {
            // TODO: handle exception
            JOptionPane.showMessageDialog(null,"Error al comprobar la fila"+e.getMessage());
        }
        
    }

    public void Comprobar_cambio_de_index(){

        int indexActual = tlbDatos.getSelectedRow();
        //? Comprueba si en la fila esta seleccionada, con una variable publica

        if(indexActual != indexAnterior){
            Counter_General[1]=0;
        }
        indexAnterior = indexActual; //? Actualiza la variable publica
    }
    
    private void Editar_Campos(int index){
        

            //? se ejecuta solo si el counter de editar es 0
            //! si es cero significa que no se a ejecutado y el counter esta limitado a 1 por ende solo se ejecuta una vez
            if(Counter_General[1] == 0 ){
                //? se encarga de rellenar los campos con los datos segun la lista

                txtOrden.setText(String.valueOf(index));
                String Estado_Comparative = tlbDatos.getValueAt(index,1).toString();
                String Nombre = tlbDatos.getValueAt(index,2).toString();
                String Descripcion = tlbDatos.getValueAt(index,3).toString();

                txtOrden.setText(String.valueOf(index));


                switch(Estado_Comparative){
                    case "Pendiente":
                        cmbEstado.setSelectedIndex(0);
                        break;
                    case "Cancelado":
                        cmbEstado.setSelectedIndex(1);
                        break;
                    case "Completado":
                        cmbEstado.setSelectedIndex(2);
                        break;
                }

                txtNombre.setText(Nombre);
                txtpDescripcion.setText(Descripcion);
                Counter_General[1]++;
                }
        
    }
    
    private void Limpiar_Campos(){
        //Limpiar Campos
        int N_tareas =Counter_General[0];

        //? Limpia los campos Xd
        txtOrden.setText(String.valueOf(N_tareas));
        txtNombre.setText("");
        txtpDescripcion.setText("");
        cmbEstado.setSelectedIndex(0);
        tlbDatos.clearSelection();
    
    }
    
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        //Obteniendo modelo de la tabla
        modelo = (DefaultTableModel) tlbDatos.getModel();
        //Acomodando  y ordenando variables

        int index = Filaseleccionada ? //? Esto es un operador temario cumple la misma funcion de una sentencia if-else
                    tlbDatos.getValueAt(tlbDatos.getSelectedRow(), 0).hashCode() : //! si la fila esta seleccionada
                    Counter_General[0];//! si no lo esta

        
        String Estado = cmbEstado.getSelectedItem().toString();
        String Nombre = txtNombre.getText().trim();
        String Descripcion = txtpDescripcion.getText();
        
        
        //Comprobar campos
        
        //*comprueba que los campos no esten vacios
        if(!(Nombre.isEmpty() || Descripcion.isEmpty())){
            
            //Llamar funcion
            Añadir_o_Reemplazar_datos(index,Estado,Nombre,Descripcion);

            if(!Filaseleccionada){//? se ejecuta solo si se trabaja con el counter de tareas
                Counter_General[0]++;
            }

            //Limpiando campos
            Limpiar_Campos();


           //Actualizar modelo de tabla
            modelo = (DefaultTableModel) tlbDatos.getModel();
            tlbDatos.setModel(modelo);
        }else{
            JOptionPane.showMessageDialog(null, "Por Favor rellene los campos");
            return;
        }
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cmbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEstadoActionPerformed

    private void btnDeseleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeseleccionarActionPerformed
        // TODO add your handling code here:
        Limpiar_Campos();
    }//GEN-LAST:event_btnDeseleccionarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
         //guardar el index de la fila seleccionada
        int index = tlbDatos.getSelectedRow();
        
         //restar counter de tareas
        Counter_General[0]--;
        
         //Limpiar Campos
        Limpiar_Campos();
        
        //Actualizar modelo de tabla
        modelo = (DefaultTableModel) tlbDatos.getModel();
        modelo.removeRow(index);
        tlbDatos.setModel(modelo);
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelDatos;
    private javax.swing.JPanel PanelGeneral;
    private javax.swing.JPanel PanelList;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDeseleccionar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cmbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panelbar;
    private javax.swing.JTable tlbDatos;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JLabel txtOrden;
    private javax.swing.JTextArea txtpDescripcion;
    // End of variables declaration//GEN-END:variables
}
