/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyects_jframe.Temporizador_con_Alarma;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

import javax.swing.Timer;

/*
 como funciona?
-tomara la hora del ordenador plasmandola en la interfaz creada
-luego habilitara una opciones que permitan elegir cuando sonara la alarma
-se habilitara el boton iniciar y se desabilitaran las opciones para que empieze a cronometrar el tiempo


tareas:
    -extraer la hora del ordenador
    -crear unos campos usando el spinner ,para indicar cuanto tiempo desde la hora actual va a sonar la alarma
    -introducir un label arriba de los spiners ,este se atualizara una vez de hay se modificara segun los datos de lso spinners
    -Guardar los datos de las alarmas en una base sql
    -usar una libreria para reproducir un sonido cuando la hora llegue
    .Crearuna funcion que reinicie todo

*/

/**
 *
 * @author Iberos-HP
 */
public class Principal2 extends javax.swing.JFrame {
        public boolean Campos_llenos= false;

        ArrayList baseDatos = new ArrayList();
        
        DefaultListModel model = new DefaultListModel();
    /**
     * Creates new form Principal2
     */
    public Principal2() {
        initComponents();
        
        model = new DefaultListModel();
        listAlarmas.setModel(model);
        InicializarLista();
        TimerUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Principal = new javax.swing.JPanel();
        lbHoraOrdenador = new javax.swing.JLabel();
        lbAlarma = new javax.swing.JLabel();
        lbTiempoRestante = new javax.swing.JLabel();
        Alarmas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAlarmas = new javax.swing.JList<>();
        Botones = new javax.swing.JPanel();
        spHora = new javax.swing.JSpinner();
        spMinutos = new javax.swing.JSpinner();
        txtHora = new javax.swing.JLabel();
        btnAgregarAlarma = new javax.swing.JButton();
        txtMinutos1 = new javax.swing.JLabel();
        cmbPeriodo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbHoraOrdenador.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbHoraOrdenador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHoraOrdenador.setText("Hora del ordenador");

        lbAlarma.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbAlarma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAlarma.setText("Alarma mas cercana");

        lbTiempoRestante.setText("Tiempo Restante");

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lbHoraOrdenador, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(lbTiempoRestante))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(lbAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lbHoraOrdenador, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(lbAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbTiempoRestante)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        listAlarmas.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        listAlarmas.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jScrollPane2.setViewportView(listAlarmas);

        javax.swing.GroupLayout AlarmasLayout = new javax.swing.GroupLayout(Alarmas);
        Alarmas.setLayout(AlarmasLayout);
        AlarmasLayout.setHorizontalGroup(
            AlarmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        AlarmasLayout.setVerticalGroup(
            AlarmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
        );

        txtHora.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtHora.setText("Hora");

        btnAgregarAlarma.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAgregarAlarma.setText("Agregar Alarma");
        btnAgregarAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAlarmaActionPerformed(evt);
            }
        });

        txtMinutos1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtMinutos1.setText("Minutos");

        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        javax.swing.GroupLayout BotonesLayout = new javax.swing.GroupLayout(Botones);
        Botones.setLayout(BotonesLayout);
        BotonesLayout.setHorizontalGroup(
            BotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotonesLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(txtHora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtMinutos1)
                .addGap(94, 94, 94))
            .addGroup(BotonesLayout.createSequentialGroup()
                .addGroup(BotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BotonesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spHora, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BotonesLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnAgregarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BotonesLayout.setVerticalGroup(
            BotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHora)
                    .addComponent(txtMinutos1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarAlarma)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Alarmas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Alarmas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAlarmaActionPerformed
        // TODO add your handling code here:
        
        int Hora,Minutos;
        String periodo;
        
        Hora= spHora.getValue().hashCode();
        Minutos = spMinutos.getValue().hashCode();
        periodo = cmbPeriodo.getSelectedItem().toString();
        
        
        
        
        
        resetCampos();
    }//GEN-LAST:event_btnAgregarAlarmaActionPerformed

    public void Esconderbotones(boolean estado){
       btnAgregarAlarma.setVisible(estado);
       cmbPeriodo.setVisible(estado);
    }
    
    private void Correcciones(int hora , int minutos){
       
        if(hora == -1){
            spHora.setValue(0);
        } 
        if(minutos == -1){
            spMinutos.setValue(0);
        }
    }
    
    public void InicializarLista(){
        
    }
    
    private void EstablecerHoraPrincipal(){
        // Obtener la hora actual
                LocalTime horaActual = LocalTime.now();
                // Formatear la hora como una cadena
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("hh:mm a");
                String HoraActual = horaActual.format(formato);
                // Actualizar el label con la hora actual
                lbHoraOrdenador.setText(HoraActual);
    }
    
    private void CompararCamposllenos(){
        int Hora = spHora.getValue().hashCode();
        int Minutos = spMinutos.getValue().hashCode();
        
        if( Hora != 0 && Minutos != 0){
            Campos_llenos = true;
        }else{
            Campos_llenos = false;
        }
        
        Correcciones(Hora,Minutos);
    }
    
    private void resetCampos(){
        spHora.setValue(0);
        spMinutos.setValue(0);
        cmbPeriodo.setSelectedIndex(0);
    }
    
    public void TimerUpdate(){
    Timer reloj = new Timer(10 , new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent e){
            Esconderbotones(Campos_llenos);
            EstablecerHoraPrincipal();
            CompararCamposllenos();


            }

        });
        reloj.start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Alarmas;
    private javax.swing.JPanel Botones;
    private javax.swing.JPanel Principal;
    private javax.swing.JButton btnAgregarAlarma;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAlarma;
    private javax.swing.JLabel lbHoraOrdenador;
    private javax.swing.JLabel lbTiempoRestante;
    private javax.swing.JList<String> listAlarmas;
    private javax.swing.JSpinner spHora;
    private javax.swing.JSpinner spMinutos;
    private javax.swing.JLabel txtHora;
    private javax.swing.JLabel txtMinutos1;
    // End of variables declaration//GEN-END:variables
}
